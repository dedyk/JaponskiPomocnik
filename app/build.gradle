apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "pl.idedyk.android.japaneselearnhelper"
        minSdkVersion 10
        targetSdkVersion 22
        multiDexEnabled true
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    useLibrary 'org.apache.http.legacy'

    lintOptions {
	abortOnError false
    }
}

dependencies {
    compile 'com.google.android.gms:play-services:+'
    compile 'com.android.support:multidex:1.0.1'
    compile files('libs/JapaneseDictionaryAPI-1.0-SNAPSHOT.jar')
    compile files('libs/JapaneseDictionaryLuceneCommon-1.0-SNAPSHOT.jar')
    compile files('libs/javacsv-2.1.jar')
    compile files('libs/lucene-analyzers-common-4.7.2.jar')
    compile files('libs/lucene-core-4.7.2-without-SPIClassIterator-and-RamUsageEstimator.jar')
    compile files('libs/lucene-suggest-4.7.2.jar')
}


def Properties props = new Properties()
def propFile = new File('app/signing.properties')

if (propFile.canRead()){

    props.load(new FileInputStream(propFile))

    if (props!=null && props.containsKey('app.signingConfigs.release.storeFile') &&
            props.containsKey('app.signingConfigs.release.keyAlias')) {

        android.signingConfigs.release.storeFile = file(props['app.signingConfigs.release.storeFile'])
        android.signingConfigs.release.keyAlias = props['app.signingConfigs.release.keyAlias']
        android.signingConfigs.release.storePassword = System.console().readLine("\nKeystore password: ")
        android.signingConfigs.release.keyPassword = System.console().readLine("\nKey password: ")
        
    } else {
	throw new Exception("signing.properties found but some entries are missing")
    }
} else {
    throw new Exception("signing.properties not found")
}
